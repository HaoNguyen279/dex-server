 <div class="row justify-content-center">
    <div style="position: fixed; bottom: 20px; right: 20px; z-index: 1050;" class="toast align-items-center text-white bg-success border-0" id="myToast" data-bs-delay="3000" data-bs-autohide="true" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="d-flex">
            <div class="toast-body" id="toast_body">
            
            </div>
            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
    </div>

    <div class="col-12 col-lg-8 col-xl-7 py-4">
            <div class="cart-header">
                <h1 class="cart-title">
                    <i class="fas fa-shopping-cart"></i> Your cart
                </h1>
                <!-- <p class="cart-subtitle">Giỏ hàng gaming của bạn</p> -->
            </div>
                

            <% laptops.forEach( item => { %>
            <!-- Cart Item -->
            <div class="cart-item mb-4 product-item-count-class card-item-bg">
                <div class="cart-item-content">
                    <button class="remove-btn" onclick="removeItem(this, '<%= item._id %>')">
                        <i class="fas fa-times"></i>
                    </button>
                    
                    <div class="row p-1">
                        <div class="col-md-4 rounded" style="background-color: rgb(203, 215, 228);">
                            <img src="<%= item.image_url %>" style='object-fit: contain;' 
                                    alt="Lenovo LOQ Gaming Laptop" class="product-image">
                        </div>
                        <div class="col-md-5">
                            <h5 class="product-title"><%= item.name %></h5>
                            <p class="product-specs">
                                <%= item.specs %><br>
                            </p>
                            <div>
                                <span class="badge badge-gaming"><%= item.brand %></span>
                                <span class="badge badge-category">Gaming Laptop</span>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="price">$<%= item.price %></div>
                            <div class="quantity-controls">
                                <button class="quantity-btn" onclick="changeQuantity(this, -1)">-</button>
                                <div class="quantity-display"><%= item.amount %></div>
                                <button class="quantity-btn" onclick="changeQuantity(this, 1)">+</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <% }); %>
                            <!-- Cart Total -->
            <div class="cart-total">
                <div class="cart-total-content">
                    <div class="row align-items-center">
                        <div class="col-md-6">
                            <h4 class="mb-0">
                                <i class="fas fa-calculator"></i> Tổng cộng
                            </h4>
                            <p class="mb-0 text-muted"><span id="quantity_span"></span> sản phẩm trong giỏ hàng</p>
                        </div>
                        <div class="col-md-6 text-md-end">
                            <div class="total-price" id="totalPrice"></div>
                        </div>
                    </div>
                    <button class="checkout-btn" onclick="window.location.href='/cart/payment'">
                        <i class="fas fa-credit-card"></i> Thanh toán ngay
                    </button>
                </div>
            </div>
    </div>
</div>

   <script>
        const product_count_element = document.getElementsByClassName("product-item-count-class");
        const quantity_span_element = document.getElementById('quantity_span');
        console.log(product_count_element.length);
        quantity_span_element.textContent = product_count_element.length;
        updateTotal();
        function changeQuantity(button, change) {
            const quantityDisplay = button.parentElement.querySelector('.quantity-display');
            let quantity = parseInt(quantityDisplay.textContent);
            quantity = Math.max(1, quantity + change);
            quantityDisplay.textContent = quantity;
            updateTotal();
        }
        
        async function removeItem(button, itemId) {
            var res = await fetch('/cart/remove', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ id: itemId })
            });
            const data =  await res.json();
            if (res.ok) {
                console.log("RES => SUCCESSFUL");
                showToast(data.message, "success");
                    const item = button.closest('.cart-item');
                    item.style.animation = 'slideOut 0.3s ease-out';
                    setTimeout(() => {
                        item.remove();
                        updateTotal();
                    }, 300);
            } else {
                console.log("RES => FAILED");
                showToast(data.message, "error");
            }
        }

        function showToast(msg, type = "info") {
            const toast_body = document.getElementById("toast_body");
            toast_body.innerText = msg;
            const toastEl = document.getElementById('myToast');
            if(type != "success"){
                toastEl.classList.remove("bg-success");
                toastEl.classList.add("bg-danger");
            }
            var toast = new bootstrap.Toast(toastEl);
            toast.show();
        }
        
        function updateTotal() {
            let total = 0;
            const items = document.querySelectorAll('.cart-item');
            let itemCount = 0;
            
            items.forEach(item => {
                const priceText = item.querySelector('.price').textContent;
                const quantity = parseInt(item.querySelector('.quantity-display').textContent);
                
                // Parse price (handle both $ and ₫)
                const price = parseFloat(priceText.replace(/[^0-9.]/g, ''));
                total += price * quantity;
                itemCount += quantity;
            });
            
            document.getElementById('totalPrice').textContent = '$' + total.toLocaleString();
            document.querySelector('.cart-total-content p').textContent = itemCount + ' sản phẩm trong giỏ hàng';
        }
        
        // Add CSS animation
        const style = document.createElement('style');
        style.textContent = `
            @keyframes slideOut {
                from {
                    opacity: 1;
                    transform: translateX(0);
                }
                to {
                    opacity: 0;
                    transform: translateX(100%);
                }
            }
        `;
        document.head.appendChild(style);
    </script>